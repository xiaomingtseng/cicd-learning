name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [16.x, 18.x]
    
    steps:
    - name: Checkout 程式碼
      uses: actions/checkout@v3
    
    - name: 設定 Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: 安裝前端依賴
      working-directory: ./frontend
      run: npm ci
    
    - name: 執行前端測試
      working-directory: ./frontend
      run: npm run test:ci
    
    - name: 執行前端 ESLint
      working-directory: ./frontend
      run: npm run lint
    
    - name: 安裝後端依賴
      working-directory: ./backend
      run: npm ci
    
    - name: 執行後端測試
      working-directory: ./backend
      run: npm test
    
    - name: 執行後端 ESLint
      working-directory: ./backend
      run: npm run lint
    
    - name: 上傳測試覆蓋率報告
      uses: codecov/codecov-action@v3
      with:
        file: ./backend/coverage/lcov.info
        flags: backend
        name: backend-coverage
    
    - name: 上傳前端覆蓋率報告
      uses: codecov/codecov-action@v3
      with:
        file: ./frontend/coverage/lcov.info
        flags: frontend
        name: frontend-coverage

  build:
    needs: test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout 程式碼
      uses: actions/checkout@v3
    
    - name: 設定 Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: 登入 Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    - name: 建置和推送前端映像
      uses: docker/build-push-action@v4
      with:
        context: ./frontend
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/cicd-learning-frontend:latest
          ${{ secrets.DOCKER_USERNAME }}/cicd-learning-frontend:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    - name: 建置和推送後端映像
      uses: docker/build-push-action@v4
      with:
        context: ./backend
        push: true
        tags: |
          ${{ secrets.DOCKER_USERNAME }}/cicd-learning-backend:latest
          ${{ secrets.DOCKER_USERNAME }}/cicd-learning-backend:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout 程式碼
      uses: actions/checkout@v3
    
    - name: 部署到測試環境
      run: |
        echo "部署到測試環境..."
        # 這裡可以加入實際的部署腳本
        # 例如：ssh 到伺服器並執行 docker-compose up
    
    - name: 執行煙霧測試
      run: |
        echo "執行煙霧測試..."
        # 可以加入基本的健康檢查
    
    - name: 通知部署結果
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        channel: '#deployments'
        webhook_url: ${{ secrets.SLACK_WEBHOOK }}
      if: always()